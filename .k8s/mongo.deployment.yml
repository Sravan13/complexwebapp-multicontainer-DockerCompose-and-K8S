apiVersion: v1
kind: ConfigMap
metadata:
  labels:
      app: mongo-env
  name: mongo-env
data:
  MONGODB_DBNAME: codeWithSravan
  MONGODB_ROLE: readWrite
  MONGODB_ROOT_ROLE: root
  MONGODB_ROOT_USERNAME: dbadmin
  MONGODB_USERNAME: webrole


---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
# The reclaim policy applies to the persistent volumes not the storage class itself. 
# pvs and pvcs that are created using that storage class will inherit the reclaim policy set here.
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
    name: mongo-pv
spec:
    capacity:
        storage: 1Gi
    volumeMode: Filesystem
    accessModes:
        - ReadWriteOnce
    storageClassName: local-storage
    local:
        path: /tmp/data/db
    nodeAffinity:
        required:
            nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                          - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: mongo-pvc
spec:
    accessModes:
        - ReadWriteOnce
    storageClassName: local-storage
    resources:
        requests:
            storage: 1Gi

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo  
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo  
  template:
    metadata:
      labels:
        app: mongo
    spec:
      # volumes:
      #   - name: mongo-volume
      #     PersistentVolumeClaim:
      #       claimName: mongo-pvc
      containers:
      - env:
        - name: MONGODB_DBNAME
          valueFrom:
            configMapKeyRef:
              key: MONGODB_DBNAME
              name: mongo-env

        # pull password from secrets
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-password
              name: db-passwords

        - name: MONGODB_ROLE
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ROLE
              name: mongo-env

        - name: MONGODB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ROOT_USERNAME
              name: mongo-env

        # pull password from secrets      
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db-root-password
              name: db-passwords

        - name: MONGODB_ROOT_ROLE
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ROOT_ROLE
              name: mongo-env
        
        - name: MONGODB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MONGODB_USERNAME
              name: mongo-env

        image: sravan13/mongo
        imagePullPolicy: IfNotPresent
        name: mongo
        ports:
         - containerPort: 27017
        resources:    {}    
        # Can uncomment following lines if on Mac/Linux (issue on Docker for Windows prevents this from working)     
        # volumeMounts:
        # - name: mongo-volume
        #   mountPath: /data/db


      



        


